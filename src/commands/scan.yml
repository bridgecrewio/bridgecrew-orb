description: |
  Run Bridgecrew scan
parameters:
  directory:
    description: "IaC root directory"
    type: string
    default: "none"
  file:
    description: "IaC file"
    type: string
    default: "none"
  output:
    description: "Report output format"
    type: enum
    enum: ["json", "cli", "junitxml"]
    default: "cli"
  soft-fail:
    description: "Runs checks without failing build"
    type: boolean
    default: false
  api-key-variable:
    description: "API key to access bridgecrew"
    type: env_var_name
    default: BC_API_KEY
steps:
  - run:
      name: Scan
      command: |
        export BC_SOURCE=circleci
        NONE=none
        SUPPRESS=<<parameters.soft-fail>>
        OUTPUT=<<parameters.output>>
        DIRECTORY=<<parameters.directory>>
        FILE=<<parameters.file>>
        API_KEY=$<<parameters.api-key-variable>>
        REPO_URL=`git ls-remote --get-url`
        REPO=`echo $REPO_URL | awk -F"[:.]" '{print $3}'`
        BRANCH=`git rev-parse --abbrev-ref HEAD`
        CMD_STR="bridgecrew -o $OUTPUT --branch $BRANCH"
        if [[ $FILE == $NONE ]] && [[ $DIRECTORY == $NONE ]]; then
          echo "file or directory must be provided"
          exit 1
        elif [[ $FILE != $NONE ]] && [[ $DIRECTORY != $NONE ]]; then
          echo "cannot provide file and directory, chose only one"
          exit 1
        fi
        if [ $SUPPRESS == true ]; then
          CMD_STR="$CMD_STR -s"
        fi
        if [ $FILE != $NONE ]; then
          CMD_STR="$CMD_STR -f $FILE"
        fi
        if [ $DIRECTORY != $NONE ]; then
          CMD_STR="$CMD_STR -d $DIRECTORY"
        fi
        if [ -n "$API_KEY" ]; then
          CMD_STR="$CMD_STR --bc-api-key $API_KEY --repo-id $REPO"
        fi
        echo "running bridgecrew with command $CMD_STR"
        echo $CMD_STR | sh
